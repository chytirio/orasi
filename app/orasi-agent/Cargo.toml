lints.workspace = true

[package]
name = "orasi-agent"
version = "0.1.0"
edition = "2021"
description = "Orasi Agent for distributed ingestion, indexing, and processing"
license = "Apache-2.0"
repository = "https://github.com/chytirio/orasi"
keywords = ["orasi", "agent", "ingestion", "indexing", "distributed", "telemetry"]
categories = ["asynchronous", "network-programming", "data-processing"]

[[bin]]
name = "orasi-agent"
path = "src/main.rs"

[dependencies]
# Core dependencies
bridge-core = { path = "../../crates/bridge-core" }
ingestion = { path = "../../crates/ingestion" }
streaming-processor = { path = "../../crates/streaming-processor" }
schema-registry = { path = "../../crates/schema-registry" }
query-engine = { path = "../../crates/query-engine" }

# HTTP and gRPC dependencies
axum = { workspace = true }
tonic = { workspace = true }
prost = { workspace = true }
hyper = { workspace = true, features = ["full"] }
tower = "0.5"
tower-http = { workspace = true, features = ["cors", "trace", "compression-br"] }
reqwest = { version = "0.11", features = ["json"] }

# Email dependencies
lettre = { version = "0.11", features = ["tokio1", "tokio1-native-tls"] }

# Async runtime
tokio = { workspace = true, features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Configuration
config = "0.13"
toml = "0.8"

# Utilities
uuid = { version = "1.0", features = ["v4"] }
chrono = { version = "0.4", features = ["serde"] }
futures = "0.3"
futures-util = "0.3"

# Metrics and monitoring
prometheus = "0.13"
metrics = "0.21"
metrics-exporter-prometheus = "0.12"

# Cluster coordination
etcd-client = "0.12"
consul = "0.4"

# Health checks and service discovery
health = "0.2"
tonic-health = { workspace = true }

# Data processing
arrow = "56.0"
parquet = "56.0"

# Indexing dependencies
sha2 = "0.10"
regex = "1.0"
sysinfo = "0.30"

# Database for local state
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite"] }

# AWS SDK for S3 support
aws-config = "1.0"
aws-sdk-s3 = "1.0"

# Time and scheduling
tokio-cron-scheduler = "0.9"

[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.8"
test-log = "0.2"
mockall = "0.12"
filetime = "0.2"

[[example]]
name = "basic_agent_example"
path = "examples/basic_agent_example.rs"

[[example]]
name = "query_example"
path = "examples/query_example.rs"

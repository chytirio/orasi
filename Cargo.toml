[workspace]
resolver = "2"
members = [
  "app/orasi-agent",
  "app/orasi-cli",
  "app/orasi-gateway",
  "crates/bridge-core",
  "crates/ingestion",
  "crates/query-engine",
  "crates/bridge-auth",
  "crates/streaming-processor",
  "crates/schema-registry",
  "crates/bridge-api",
  "connectors/deltalake",
  "connectors/hudi",
  "connectors/iceberg",
  # "connectors/kafka",  # Disabled for now
  "connectors/s3-parquet",
  "connectors/snowflake",
  "infra/controller",
  "testing/data-generator",
  "testing/test-runner",
  "examples",
]

[workspace.dependencies]
# Core dependencies
tokio = { version = "1.36", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# OpenTelemetry dependencies
opentelemetry = "0.22"
opentelemetry-http = "0.10"
opentelemetry-otlp = "0.15"
opentelemetry-semantic-conventions = "0.14"
opentelemetry-proto = "0.30"

# Async runtime and networking
tonic = "0.13"
prost = "0.13"
hyper = { version = "1.1", features = ["full"] }
axum = "0.7"
tower = "0.5"

# Data processing and serialization
arrow = "56.0"
arrow-array = "56.0"
arrow-schema = "56.0"
arrow-cast = "56.0"
arrow-ipc = "56.0"
arrow-json = "56.0"
parquet = "56.0"
avro-rs = "0.13"
deltalake = "0.27"
iceberg-rust = "0.8"

# OTel-Arrow dependencies
otel-arrow-rust = { git = "https://github.com/open-telemetry/otel-arrow", branch = "main", package = "otel-arrow-rust" }

# Database and storage
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "mysql", "sqlite"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }

# Configuration and validation
config = "0.14"
validator = { version = "0.16", features = ["derive"] }

# Metrics and monitoring
prometheus = "0.13"
metrics = "0.21"
metrics-exporter-prometheus = "0.12"

# Time and date handling
chrono = { version = "0.4.35", features = ["serde"] }
time = "0.3"

# UUID and identifiers
uuid = { version = "1.7", features = ["v4", "serde"] }

# Compression and encoding
zstd = "0.13"
snappy = "0.0"

# Kafka client (optional for now due to compilation issues on some platforms)
# Note: rdkafka is added directly to ingestion crate instead of workspace

# HTTP client
reqwest = { version = "0.12", features = ["json", "stream"] }

# CLI framework
clap = { version = "4.5", features = ["derive"] }

# Testing
criterion = "0.5"
mockall = "0.12"

# Development tools
rustfmt = "1.6"
clippy = "0.1"



[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true

[profile.bench]
opt-level = 3
debug = false



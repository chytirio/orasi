version = "1.0.0"

[storage]
backend = "Postgres"
connection_string = "postgresql://postgres:postgres@postgres:5432/orasi_dev"
max_connections = 50
connection_timeout = 60
options = {}

[storage.postgres]
url = "postgresql://postgres:postgres@postgres:5432/orasi_dev"
database = "orasi_dev"
username = "postgres"
password = "postgres"
host = "postgres"
port = 5432
ssl_mode = "require"
pool_size = 20

[storage.sqlite]
database_path = ""
enable_wal = false
connection_timeout = 30
journal_mode = "WAL"

[storage.redis]
url = "redis://redis-cluster:6379"
host = "redis-cluster"
port = 6379
password = "your-redis-password"
database = 0
pool_size = 20
connection_timeout = 60
read_timeout = 60
write_timeout = 60
key_prefix = "schema_registry:"
schema_ttl = 86400  # 24 hours TTL for production
enable_clustering = true
persistence_mode = "Both"
memory_policy = "AllKeysLru"
enable_sentinel = true
sentinel_master_name = "mymaster"
sentinel_hosts = ["sentinel1:26379", "sentinel2:26379", "sentinel3:26379"]
enable_ssl = true
ssl_cert_path = "/etc/ssl/certs/redis.crt"
ssl_key_path = "/etc/ssl/private/redis.key"
ssl_ca_path = "/etc/ssl/certs/ca.crt"
enable_compression = true
compression_threshold = 512

[api]
host = "0.0.0.0"
port = 8080
base_path = "/api/v1"
max_request_size = 52428800
request_timeout = 60
enable_cors = true
cors_origins = ["https://your-domain.com", "https://api.your-domain.com"]
enable_cache = true
cache_ttl_seconds = 300
cache_max_entries = 10000

[api.versioning]
enabled = true
supported_versions = ["v1.0.0"]
default_version = "v1.0.0"
allow_version_negotiation = true
deprecated_versions = {}
compatibility_matrix = { "v1.0.0" = ["v1.0.0"] }

[validation]
enable_validation = true
strict_mode = false
max_schema_size = 1048576
allowed_formats = ["json", "yaml"]
custom_rules = {}

[security]
enable_auth = false
auth_type = "none"
enable_authorization = false
api_key_header = "X-API-Key"
allowed_api_keys = []
rate_limiting = false
rate_limit_per_minute = 100

[security.api_key_permissions]
"prod-api-key-read" = ["schemas:read", "stats:read", "metrics:read"]
"prod-api-key-admin" = ["*:*"]

[monitoring]
enable_metrics = true
metrics_endpoint = "/metrics"
enable_health_checks = true
health_check_endpoint = "/health"
enable_structured_logging = true
log_level = "info"
log_format = "Json"

# Schema Registry Configuration Example
# This file shows all available configuration options

version = "1.0.0"

[storage]
# Storage backend type: Memory, Sqlite, Postgres, Redis
backend = "Memory"
connection_string = "memory://"
max_connections = 10
connection_timeout = 30

[storage.postgres]
url = "postgresql://localhost:5432/schema_registry"
database = "schema_registry"
username = "postgres"
password = ""
host = "localhost"
port = 5432
ssl_mode = "disable"
pool_size = 10

[storage.sqlite]
database_path = "schema_registry.db"
enable_wal = true
connection_timeout = 30
journal_mode = "WAL"

[storage.redis]
url = "redis://localhost:6379"
host = "localhost"
port = 6379
password = ""
database = 0
pool_size = 10
connection_timeout = 30
read_timeout = 30
write_timeout = 30
key_prefix = "schema_registry:"
schema_ttl = 0  # No TTL by default
enable_clustering = false
persistence_mode = "Rdb"
memory_policy = "AllKeysLru"
enable_sentinel = false
sentinel_master_name = ""
sentinel_hosts = []
enable_ssl = false
ssl_cert_path = ""
ssl_key_path = ""
ssl_ca_path = ""
enable_compression = false
compression_threshold = 1024

[api]
host = "127.0.0.1"
port = 8080
base_path = "/api/v1"
max_request_size = 10485760  # 10MB
request_timeout = 30
enable_cors = true
cors_origins = ["*"]
enable_cache = true
cache_ttl_seconds = 30
cache_max_entries = 1024

[api.versioning]
enabled = true
supported_versions = ["v1.0.0", "v2.0.0"]
default_version = "v2.0.0"
allow_version_negotiation = true
deprecated_versions = { "v1.0.0" = "API v1.0.0 is deprecated. Please upgrade to v2.0.0." }
compatibility_matrix = { "v1.0.0" = ["v1.0.0", "v1.1.0"], "v2.0.0" = ["v2.0.0", "v2.1.0"] }

[validation]
enable_validation = true
strict_mode = false
max_schema_size = 1048576  # 1MB
allowed_formats = ["Json", "Yaml"]

[security]
enable_auth = true
api_key_header = "X-API-Key"
allowed_api_keys = ["test-api-key"]
enable_authorization = true

# Map API keys to permissions
# permissions use the format "resource:action". Wildcards supported: "*:*" or "resource:*"
[security.api_key_permissions]
"test-api-key" = ["schemas:read", "schemas:write", "schemas:validate", "stats:read", "metrics:read"]

[monitoring]
enable_metrics = true
metrics_endpoint = "/metrics"
enable_health_checks = true
health_check_endpoint = "/health"
enable_structured_logging = true
log_level = "info"
log_format = "Json"

lints.workspace = true

[package]
name = "query-engine"
version = "0.1.0"
edition = "2021"
description = "Query engine for the bridge"
license = "Apache-2.0"
repository = "https://github.com/chytirio/orasi"
keywords = ["query", "engine", "sql", "observability", "bridge"]
categories = ["observability", "data-processing"]

[dependencies]
# Workspace dependencies
bridge-core = { path = "../bridge-core" }
tokio = { workspace = true, features = ["full"] }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
chrono = { workspace = true }
uuid = { workspace = true }

# Connector dependencies
deltalake-connector = { path = "../../connectors/deltalake" }
lakehouse-iceberg = { path = "../../connectors/iceberg" }
lakehouse-s3-parquet = { path = "../../connectors/s3-parquet" }

# Delta Lake dependencies
deltalake = { version = "0.27", default-features = false, features = ["datafusion-ext", "rustls"] }

# OpenTelemetry dependencies
opentelemetry = { workspace = true }
opentelemetry-http = { workspace = true }
opentelemetry-otlp = { workspace = true }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry-proto = { workspace = true }

# Async and networking
tonic = { workspace = true }
hyper = { workspace = true }
axum = { workspace = true }
tower = { workspace = true }

# Data processing
bytes = "1.5"
futures = "0.3"
async-trait = "0.1"

# SQL parsing
sqlparser = "0.39"

# DataFusion and Arrow ecosystem
datafusion = { version = "49.0", default-features = false, features = ["parquet"] }
arrow = { version = "55.2" }
arrow-array = { version = "55.2" }
arrow-schema = { version = "55.2" }
arrow-cast = { version = "55.2" }
arrow-ipc = { version = "55.2" }
arrow-json = { version = "55.2" }
parquet = { version = "55.2" }

# AWS S3 dependencies
aws-sdk-s3 = "1.0"
aws-config = "1.0"
aws-types = "1.0"

# Additional dependencies
dashmap = "5.5"
crossbeam-channel = "0.5"
parking_lot = "0.12"

[dev-dependencies]
tokio-test = "0.4"
mockall = { workspace = true }
tempfile = "3.8"
tracing-subscriber = "0.3"

[[example]]
name = "sql_parser_example"
path = "examples/sql_parser_example.rs"

version: '3.8'

services:
  # MinIO - S3-compatible object storage for Delta Lake
  minio:
    image: minio/minio:latest
    container_name: orasi-minio
    ports:
      - "9000:9000"      # API port
      - "9001:9001"      # Console port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_CONSOLE_ADDRESS: ":9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - orasi-network
  
  # Postgres
  postgres:
    image: postgres:latest
    container_name: orasi-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - orasi-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Trino
  trino:
    image: trinodb/trino:latest
    container_name: orasi-trino
    ports:
      - "8080:8080"
    environment:
      - TRINO_JDBC_URL=jdbc:postgresql://postgres:5432/trino
      - TRINO_JDBC_USER=trino
      - TRINO_JDBC_PASSWORD=trino
    networks:
      - orasi-network
    depends_on:
      postgres:
        condition: service_healthy

  # Spark Master
  spark-master:
    image: apache/spark:3.5.0-bin-hadoop3.3
    container_name: orasi-spark-master
    ports:
      - "8080:8080"      # Spark Web UI
      - "7077:7077"      # Spark Master port
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_data:/opt/bitnami/spark/work
      - ./config/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - orasi-network
    depends_on:
      minio:
        condition: service_healthy

  # Spark Worker
  spark-worker:
    image: apache/spark:3.5.6
    container_name: orasi-spark-worker
    ports:
      - "8081:8081"      # Spark Worker Web UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_data:/opt/spark/work-dir
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - orasi-network
    depends_on:
      spark-master:
        condition: service_healthy

  # Spark History Server (optional, for job history)
  spark-history:
    image: apache/spark:3.5.6
    container_name: orasi-spark-history
    ports:
      - "18080:18080"    # Spark History Server
    environment:
      - SPARK_MODE=history
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_data:/opt/spark/work-dir
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
    networks:
      - orasi-network
    depends_on:
      spark-master:
        condition: service_healthy

volumes:
  minio_data:
    driver: local
  spark_data:
    driver: local

networks:
  orasi-network:
    driver: bridge
